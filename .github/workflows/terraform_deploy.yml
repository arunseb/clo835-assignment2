name: CI/CD - Full Infrastructure and App Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build, Push Images & Deploy Infrastructure
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # ------------------------
      # Docker Image Build & Push
      # ------------------------
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag & Push MySQL Docker Image
        run: |
          docker build -t mysql -f Docker_mysql .
          docker tag mysql:latest ${{ steps.login-ecr.outputs.registry }}/mysql:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/mysql:latest

      - name: Build, Tag & Push Webapp Docker Image
        run: |
          docker build -t webapp -f Dockerfile .
          docker tag webapp:latest ${{ steps.login-ecr.outputs.registry }}/webapp:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/webapp:latest

      # ------------------------
      # Terraform Infra Deployment
      # ------------------------
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: |
          terraform plan \
            -var="vpc_id=${{ secrets.VPC_ID }}" \
            -var="public_subnet_id=${{ secrets.PUBLIC_SUBNET_ID }}" \
            -var="key_name=${{ secrets.KEY_NAME }}" \
            -var="webapp_image=${{ steps.login-ecr.outputs.registry }}/webapp:latest" \
            -var="mysql_image=${{ steps.login-ecr.outputs.registry }}/mysql:latest" \
            -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Export Terraform Outputs
        id: tf_outputs
        run: |
          echo "EC2_PUBLIC_IP=$(terraform output -raw ec2_instance_public_ip)" >> $GITHUB_ENV
          echo "ECR_WEBAPP_URL=$(terraform output -raw ecr_webapp_repository_url)" >> $GITHUB_ENV
          echo "ECR_MYSQL_URL=$(terraform output -raw ecr_mysql_repository_url)" >> $GITHUB_ENV

      - name: Display Outputs
        run: |
          echo "✅ EC2 Public IP: ${{ env.EC2_PUBLIC_IP }}"
          echo "✅ ECR Webapp URL: ${{ env.ECR_WEBAPP_URL }}"
          echo "✅ ECR MySQL URL: ${{ env.ECR_MYSQL_URL }}"
