name: Deploy AWS Infra and Docker Images

on:
  push:
    branches:
      - main

jobs:
  terraform-init-apply:
    name: Terraform Init and Apply (Create ECR Repos)
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }} # if used
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply (ECR repos only)
        run: terraform apply -auto-approve

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: terraform-init-apply

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push MySQL Docker image
        run: |
          docker build -t mysql -f Dockerfile_mysql .
          docker tag mysql:latest ${{ steps.login-ecr.outputs.registry }}/mysql:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/mysql:latest

      - name: Build, tag, and push Webapp Docker image
        run: |
          docker build -t webapp -f Dockerfile .
          docker tag webapp:latest ${{ steps.login-ecr.outputs.registry }}/webapp:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/webapp:latest

  terraform-final-apply:
    name: Final Terraform Apply (EC2 and other resources)
    runs-on: ubuntu-latest
    needs: build-and-push

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan with Docker Image URLs
        run: |
          terraform plan \
            -var="webapp_image=${{ steps.login-ecr.outputs.registry }}/webapp:latest" \
            -var="mysql_image=${{ steps.login-ecr.outputs.registry }}/mysql:latest" \
            -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Show Outputs
        run: |
          echo "EC2 Public IP: $(terraform output -raw ec2_instance_public_ip)"
          echo "Webapp ECR URL: $(terraform output -raw ecr_webapp_repository_url)"
          echo "MySQL ECR URL: $(terraform output -raw ecr_mysql_repository_url)"
