name: Deploy AWS Infrastructure with Terraform

on:
  push:
    branches:
      - main # This workflow ONLY runs when you push to the 'main' branch

jobs:
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0 # Make sure this matches your required_version in provider.tf

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan \
            -var="vpc_id=${{ secrets.VPC_ID }}" \
            -var="public_subnet_id=${{ secrets.PUBLIC_SUBNET_ID }}" \
            -var="key_name=${{ secrets.KEY_NAME }}" \
            -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve tfplan

      - name: Get EC2 Instance Public IP
        run: |
          if [ -f tfplan ]; then
            echo "EC2_PUBLIC_IP=$(terraform output -state=tfplan -raw ec2_instance_public_ip || terraform output -raw ec2_instance_public_ip)" >> $GITHUB_ENV
          else
            echo "EC2_PUBLIC_IP=$(terraform output -raw ec2_instance_public_ip || echo 'No IP (plan only)')" >> $GITHUB_ENV
          fi

      - name: Display EC2 Instance Public IP
        run: echo "EC2 Instance Public IP: ${{ env.EC2_PUBLIC_IP }}"

      - name: Get ECR Webapp Repository URL
        run: |
          if [ -f tfplan ]; then
            echo "ECR_WEBAPP_URL=$(terraform output -state=tfplan -raw ecr_webapp_repository_url || terraform output -raw ecr_webapp_repository_url)" >> $GITHUB_ENV
          else
            echo "ECR_WEBAPP_URL=$(terraform output -raw ecr_webapp_repository_url || echo 'No URL (plan only)')" >> $GITHUB_ENV
          fi

      - name: Display ECR Webapp Repository URL
        run: echo "ECR Webapp Repository URL: ${{ env.ECR_WEBAPP_URL }}"

      - name: Get ECR MySQL Repository URL
        run: |
          if [ -f tfplan ]; then
            echo "ECR_MYSQL_URL=$(terraform output -state=tfplan -raw ecr_mysql_repository_url || terraform output -raw ecr_mysql_repository_url)" >> $GITHUB_ENV
          else
            echo "ECR_MYSQL_URL=$(terraform output -raw ecr_mysql_repository_url || echo 'No URL (plan only)')" >> $GITHUB_ENV
          fi

      - name: Display ECR MySQL Repository URL
        run: echo "ECR MySQL Repository URL: ${{ env.ECR_MYSQL_URL }}"
